#type vertex

attribute vec3 a_Position;
attribute vec3 a_Normal;
attribute vec2 a_TexCoord;

varying vec2 v_TexCoord;
varying vec3 v_Normal;

uniform mat4 rotmat;
uniform mat4 mvp;


vec4 vertex(){
    v_TexCoord = a_TexCoord;
    v_Normal = a_Normal;

    return mvp * rotmat * vec4(a_Position, 1.0);
}

#type fragment
precision mediump float;

varying vec2 v_TexCoord;
varying vec3 v_Normal;

uniform vec4 u_Color;
uniform sampler2D u_Albedo;

vec4 fragment(){
    vec4 texColor = texture2D( u_Albedo, v_TexCoord);

    return texColor;
}

#type shader_data
{
  "ShaderData" : [
    {
      "type" : "Texture2D",
      "value" : "colorGrid.jpeg",
      "name" : "u_Albedo",
      "function" : "fragment"
    },
    {
      "type" : "Vec4",
      "value" : "[0.2,0.1,0.3,1.0]",
      "name" : "u_Color",
      "function" : "fragment"
    }
  ]
}